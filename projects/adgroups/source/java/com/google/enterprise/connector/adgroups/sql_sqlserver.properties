TEST_SERVERS=SELECT TOP 0 1 FROM :servers;
CREATE_SERVERS_SEQUENCE=
CREATE_SERVERS=CREATE TABLE :servers (serverid BIGINT IDENTITY, dn NVARCHAR(1024) NOT NULL, netbiosname VARCHAR(32) NOT NULL, dnsroot VARCHAR(64) NOT NULL, sid VARCHAR(64) NOT NULL, dsservicename VARCHAR(512) NOT NULL, invocationid VARCHAR(128) NOT NULL, highestcommittedusn INT NOT NULL, lastfullsync DATETIME, PRIMARY KEY (serverid), UNIQUE(dn), UNIQUE(sid, dnsroot));
TEST_ENTITIES=SELECT TOP 0 1 FROM :entities;
CREATE_ENTITIES_SEQUENCE=
CREATE_ENTITIES=CREATE TABLE :entities (entityid BIGINT IDENTITY, dn NVARCHAR(1024), samaccountname NVARCHAR(256), userprincipalname NVARCHAR(256), domainsid VARCHAR(64) NOT NULL, rid INT, primarygroupid INT, objectguid VARCHAR(64), usnchanged BIGINT, wellknown INT NOT NULL, PRIMARY KEY(entityid), UNIQUE(dn), UNIQUE(domainsid, primarygroupid, rid, entityid, dn), UNIQUE(objectguid)); CREATE INDEX rid:entities:index ON :entities(RID); CREATE INDEX wellknown:entities:index ON :entities(wellknown); CREATE INDEX samaccountname:entities:index on :entities(samaccountname);
TEST_MEMBERS=SELECT TOP 0 1 FROM :members;
CREATE_MEMBERS_SEQUENCE=
CREATE_MEMBERS=CREATE TABLE :members (groupid BIGINT, memberdn NVARCHAR(1024), memberid BIGINT, PRIMARY KEY (groupid, memberdn), FOREIGN KEY(groupid) REFERENCES :entities (entityid), FOREIGN KEY(memberid) REFERENCES :entities (entityid)); CREATE INDEX memberid:members:index ON :members(memberid);

SELECT_SERVER=SELECT serverid, dn, netbiosname, dnsroot, dsservicename, invocationid, highestcommittedusn, lastfullsync FROM :servers WHERE dn = :dn;
# TODO: Convert to proper merge statement
UPDATE_SERVER=IF EXISTS (SELECT NULL FROM :servers WHERE dn = :dn) UPDATE :servers SET dn = :dn, netbiosname = :netbiosname, dnsroot = :dnsroot, sid = :sid, dsservicename = :dsservicename, invocationid = :invocationid, highestcommittedusn = :highestcommittedusn, lastfullsync = :lastfullsync WHERE dn = :dn ELSE INSERT INTO :servers (dn, netbiosname, dnsroot, sid, dsservicename, invocationid, highestcommittedusn, lastfullsync) VALUES (:dn, :netbiosname, :dnsroot, :sid, :dsservicename, :invocationid, :highestcommittedusn, :lastfullsync);
MERGE_ENTITIES=IF EXISTS (SELECT NULL FROM :entities WHERE objectguid = :objectguid) UPDATE :entities SET dn = :dn, samaccountname = :samaccountname, userprincipalname = :userprincipalname, domainsid = :domainsid, rid = :rid, primarygroupid = :primarygroupid, usnchanged = :usnchanged, wellknown = :wellknown WHERE objectguid = :objectguid ELSE INSERT INTO :entities (dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged, wellknown) VALUES (:dn, :samaccountname, :userprincipalname, :domainsid, :rid, :primarygroupid, :objectguid, :usnchanged, :wellknown);

FIND_ENTITY=SELECT entityid FROM :entities WHERE dn = :dn;
FIND_PRIMARY_GROUP=SELECT entityid FROM :entities WHERE domainsid = :domainsid AND rid = :primarygroupid;
FIND_GROUP=SELECT entityid FROM :entities WHERE dn = :memberdn;
FIND_FOREIGN=SELECT entityid FROM :entities WHERE domainsid = :domainsid AND rid = :rid;

MERGE_MEMBERSHIP=IF EXISTS (SELECT NULL FROM :members WHERE groupid = :groupid AND memberdn = :memberdn) UPDATE :members SET memberid = :memberid WHERE  groupid = :groupid AND memberdn = :memberdn ELSE INSERT INTO :members (groupid, memberdn, memberid) VALUES (:groupid, :memberdn, :memberid);
DELETE_MEMBERSHIPS=DELETE FROM :members WHERE groupid IN (SELECT entityid FROM :entities WHERE dn = :dn OR objectguid = :objectguid) OR memberid in (SELECT entityid FROM :entities WHERE dn = :dn OR objectguid = :objectguid);


SELECT_USER_BY_SAMACCOUNTNAME=SELECT entityid, entities.dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged, dnsroot, netbiosname FROM :entities JOIN :servers ON domainsid = sid WHERE samaccountname = :samaccountname AND primarygroupid IS NOT NULL;
SELECT_USER_BY_DOMAIN_SAMACCOUNTNAME=SELECT entityid, entities.dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged, dnsroot, netbiosname FROM :entities JOIN :servers ON domainsid = sid WHERE samaccountname = :samaccountname and (UPPER(netbiosname) = UPPER(:netbiosname) OR LOWER(dnsroot) = LOWER(:netbiosname)) AND primarygroupid IS NOT NULL;
SELECT_ENTITY_BY_DN_AND_NOT_GUID=SELECT objectguid FROM :entities WHERE dn = :dn AND objectguid <> :objectguid;
SELECT_WELLKNOWN_MEMBERSHIPS=SELECT entityid, netbiosname, samaccountname FROM :entities LEFT JOIN :servers ON domainsid = sid WHERE wellknown = 1;
SELECT_MEMBERSHIPS_BY_ENTITYID=SELECT entityid, netbiosname, samaccountname FROM :members JOIN entities ON groupid = entityid JOIN :servers ON domainsid = sid WHERE memberid = :entityid;
SELECT_MEMBERSHIPS_BY_DN=SELECT e1.dn, memberdn, memberid FROM :entities e1 JOIN :members ON e1.entityid = groupid AND e1.dn = :dn LEFT JOIN :entities e2 ON memberid = e2.entityid WHERE e1.rid != e2.primarygroupid OR e2.primarygroupid IS NULL;
DELETE_MEMBERSHIPS_BY_DN_AND_MEMBERDN=DELETE FROM :members WHERE groupid IN (SELECT entityid FROM :entities WHERE dn = :dn) AND memberdn = :memberdn
SELECT_ALL_ENTITIES_BY_SID=SELECT dn FROM :entities WHERE domainsid = :sid;
DELETE_ENTITY=DELETE FROM entities WHERE objectguid = :objectguid;
