CREATE_SERVERS=CREATE TABLE IF NOT EXISTS :servers (serverid IDENTITY, dn VARCHAR NOT NULL, netbiosname VARCHAR NOT NULL, sid VARCHAR NOT NULL, dsservicename VARCHAR NOT NULL, invocationid VARCHAR NOT NULL, highestcommittedusn INT NOT NULL, lastsync DATETIME, UNIQUE(dn));
CREATE_ENTITIES=CREATE TABLE IF NOT EXISTS :entities (entityid IDENTITY, dn VARCHAR, samaccountname VARCHAR, userprincipalname VARCHAR, domainsid VARCHAR NOT NULL, rid INT, primarygroupid INT, objectguid VARCHAR, usnchanged INT);
CREATE_MEMBERS=CREATE TABLE IF NOT EXISTS :members (groupid LONG, memberdn VARCHAR, memberid LONG, PRIMARY KEY (groupid, memberdn), FOREIGN KEY(groupid) REFERENCES :entities (entityid), FOREIGN KEY(memberid) REFERENCES :entities (entityid));

SELECT_SERVER=SELECT serverid, dn, dsservicename, invocationid, highestcommittedusn, lastsync FROM :servers WHERE dn = :dn ORDER BY lastsync DESC;
UPDATE_SERVER=MERGE INTO :servers (dn, netbiosname, sid, dsservicename, invocationid, highestcommittedusn, lastsync) KEY (dsservicename) VALUES (:dn, :netbiosname, :sid, :dsservicename, :invocationid, :highestcommittedusn, NOW());
MERGE_ENTITIES=MERGE INTO :entities (dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged) KEY (objectguid) VALUES (:dn, :samaccountname, :userprincipalname, :domainsid, :rid, :primarygroupid, :objectguid, :usnchanged);
DELETE_MEMBERSHIPS=DELETE FROM :members WHERE groupid IN (SELECT entityid FROM :entities WHERE dn = :dn)
ADD_MEMBERSHIPS=INSERT INTO :members (groupid, memberdn) VALUES ((SELECT entityid FROM :entities WHERE dn = :dn), :memberdn);
MATCH_ENTITIES=UPDATE :members SET memberid = (SELECT entities.entityid FROM :entities WHERE members.memberdn = entities.dn);
RESOLVE_PRIMARY_GROUPS=MERGE INTO :members (groupid, memberdn, memberid) KEY (groupid, memberdn) SELECT b.entityid, a.dn, a.entityid FROM :entities a JOIN :entities b ON a.domainsid = b.domainsid AND a.primarygroupid = b.rid;
RESOLVE_FOREIGN_SECURITY_PRINCIPALS=MERGE INTO :members (groupid, memberid, memberdn) KEY (groupid, memberdn) SELECT groupid, entities.entityid, memberdn FROM :members JOIN entities ON SUBSTRING(memberdn, 4, INSTR(memberdn, ',CN') - 4) = domainsid || '-' || rid WHERE memberdn LIKE '%CN=ForeignSecurityPrincipals%';

SELECT_USER_BY_SAMACCOUNTNAME=SELECT entityid, dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged FROM :entities WHERE LOWER(samaccountname) = LOWER(:samaccountname) AND userprincipalname IS NOT NULL;
SELECT_USER_BY_NETBIOS_SAMACCOUNTNAME=SELECT entityid, entities.dn, samaccountname, userprincipalname, domainsid, rid, primarygroupid, objectguid, usnchanged FROM :entities JOIN :servers ON domainsid = sid WHERE LOWER(samaccountname) = LOWER(:samaccountname) and UPPER(netbiosname) = (:netbiosname) AND userprincipalname IS NOT NULL;
SELECT_MEMBERSHIPS_BY_ENTITYID=SELECT entityid, netbiosname, samaccountname FROM :members JOIN entities ON groupid = entityid JOIN :servers ON domainsid = sid WHERE memberid = :entityid;
